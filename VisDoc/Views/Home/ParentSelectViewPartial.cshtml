@model IEnumerable<VisDoc.Models.DocumentModel>

<head>
    <style>
        .spanClose{
            cursor:pointer;
        }
    </style>
</head>

<div>
   <input name="SearchParentSelect"  onkeyup="funcOnKeyUpInput()" style="margin-bottom:15px;" class="form-control" id="myInput" type="text" placeholder="Search..">
   <button onclick="AddToStageing()" type="button"class="btn btn-primary">Add</button>
   <select id="selecTParentId" name="parentSelect" class="form-select" size="8" aria-label="size 3 select example" multiple>

    @foreach (var Doc in Model)
    {   
        <option data-ID="@Doc.Id" data-NAME="@Doc.Name">@Doc.Name</option>
    } 
    </select>

    <div class="ParentStagingContainer">
        <ul id="ParentStagingUl" class="list-group"></ul>
    </div>
</div>

<script>
    const funcOnKeyUpInput = ()=>{
        let inVal = document.getElementById("myInput").value; 
        Array.apply(null, document.getElementById("selecTParentId").options).forEach(option =>{
            if (option.value.includes(inVal) == false){option.style.display = "none";}
            else {option.style.display = "block"; }
        })
    }


    let Allresult=[];
    const AddToStageing = ()=>{
        let selectOptions = document.getElementById("selecTParentId").options
        let result=[]
       

        for (let i=0; i< selectOptions.length; i++){
            opt = selectOptions[i]
            if(opt.selected){
                let toInsert = [opt.getAttribute("data-ID"), opt.getAttribute("data-NAME")]
                if(checkDuplicate(toInsert))
                {
                    result.push(toInsert); Allresult.push(toInsert[0])
                }else
                {
                alert("You have already selected this parent \n"+"ID: "+ toInsert[0]+"\n NAME: "+ toInsert[1])
                return null
                }
            }
        }
        result.forEach(doc =>{
            let li = document.createElement("li");
            let span = document.createElement("span");
            //let input = documemt.createElement("input")
            //input.name ="ParentList"
            //input.type ="hidden"
            //input.value = doc[1]

            span.className ="spanClose badge bg-primary rounded-pill"
            li.className ="list-group-item d-flex justify-content-between align-items-center"

            li.id =doc[0]+"_staging"
            span.innerText = "❌"
            span.onclick = removeParent

            li.appendChild(document.createTextNode(doc[1]))
            li.appendChild(span)
            //li.appendChild(input)
            document.getElementById("ParentStagingUl").appendChild(li)
        })
    }
     
    const checkDuplicate = (toInsert)=>{
        if(Allresult.length < 1) return true

        for(let i=0;i<=Allresult.length; i++)
        {
            if (Allresult[i] == toInsert[0])
            {
                return false
            }
        }
        return true
    }

    const removeParent = (e)=>{
        Allresult.splice(Allresult.indexOf(parseInt(e.target.parentElement.id.split("_")[0])), 1)
        document.getElementById(e.target.parentElement.id).remove()
    }
</script>
